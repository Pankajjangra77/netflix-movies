{"version":3,"sources":["components/Navbar.js","redux/constants/itemConstant.js","components/subcomponent/MovieItem.js","redux/actions/movie.js","axios.js","request.js","redux/actions/filter.js","components/Row.js","redux/actions/genres.js","pages/Home.js","pages/ItemDetails.js","pages/TVShows.js","pages/NewAndPopular.js","pages/Movies.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/filter.js","redux/reducers/genre.js","redux/reducers/movie.js","store.js","index.js"],"names":["Navbar","className","to","src","alt","SET_MOVIE","GET_GENRES","FILTER_BOOK","MovieItem","imgUrl","name","setMovie","id","overview","releaseDate","rating","genres","history","useHistory","onClick","e","preventDefault","push","style","defaultProps","connect","dispatch","obj","type","payload","instance","axios","create","baseURL","REACT_APP_API_KEY","process","baseUrl","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchMoviePopular","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","fetchPopularTVShows","fetchIndianMovies","fetchUpcomingMovies","fetchTopRatedTv","fetchGenresUrl","param","state","filterParam","filter","moviesFilter","filterAction","title","moviesUrl","allGenres","useState","movies","setMovies","setGenres","useEffect","a","fetchMovies","get","results","data","map","poster_path","genre_ids","first_air_date","release_date","vote_average","imageUrl","genreIds","flattedGenresArr","flat","uniqGenres","Set","allMovies","toString","desc","fetchGenres","res","movie","cast","setCast","Object","keys","length","genresArr","find","gen","item","response","castItems","slice","fetchData","profile_path","App","exact","path","component","Home","TVShows","Movies","NewAndPopular","ItemDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","devToolsExtension","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8bb22c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './Navbar.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n        <div className=\"navbar\">\r\n        <div className=\"navbar__right\">\r\n            <NavLink to=\"/\">\r\n             <img className=\"navbar__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix logo\" />\r\n            </NavLink>\r\n        \r\n            <NavLink to=\"/\" className=\"nav__links\">\r\n                Home\r\n            </NavLink>\r\n            <NavLink to=\"/tv-shows\" className=\"nav__links\">\r\n                TVShows\r\n            </NavLink>\r\n            <NavLink to=\"/movies\" className=\"nav__links\">\r\n                Movies\r\n            </NavLink>\r\n            <NavLink to=\"/new-and-popular\" className=\"nav__links\">\r\n                New & Popular\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className=\"navbar__left\">\r\n            <div className=\"left__icon\">\r\n            <SearchIcon />\r\n            </div>\r\n             <div className=\"left__icon\">\r\n                <CardGiftcardIcon />\r\n             </div>\r\n            <div className=\"left__icon\">\r\n                <NotificationsIcon />\r\n            </div>\r\n            <div className=\"left__icon\">\r\n                <AccountCircleIcon />\r\n            </div>\r\n        </div>\r\n        </div>\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const SET_MOVIE = 'SET_MOVIE';\r\nexport const GET_GENRES = 'GET_GENRE';\r\nexport const FILTER_BOOK = 'FILTER_BOOK';\r\nexport const FETCH_CASTS = 'FETCH_CASTS';\r\nexport const FETCH_CASTS_SUCCESS = 'FETCH_CASTS_SUCCESS';\r\nexport const FETCH_CASTS_FAILURE = 'FETCH_CASTS_FAILURE';\r\n\r\n// function fetchCasts() {\r\n//     return {\r\n//       type: FETCH_CASTS\r\n//     };\r\n//   }\r\n  \r\n//   function fetchCastsSuccess(data) {\r\n//     return {\r\n//       type: FETCH_CASTS_SUCCESS,\r\n//       data\r\n//     };\r\n//   }\r\n  \r\n//   function fetchCastsFail(error) {\r\n//     return {\r\n//       type: FETCH_CASTS_FAILURE,\r\n//       error\r\n//     };\r\n//   }\r\n\r\n//   export const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\r\n//   export const URL_CAST = '/casts';\r\n//   export const API_KEY = '?api_key=4d4ed145d3584846f5922b6a467e1f85';\r\n\r\n//   export function fetchCastList(id){\r\n//     const url_casts = URL_DETAIL + id + URL_CAST + API_KEY;\r\n//     return function(dispatch){\r\n//       dispatch(fetchCasts())\r\n//       return fetch(url_casts)\r\n//         .then(response => response.json())\r\n//         .then(json => json.cast)\r\n//         .then(data => dispatch(fetchCastsSuccess(data)))\r\n//         .catch(error => dispatch(fetchCastsFail(error)))\r\n//     }\r\n//   }\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport setMovie from '../../redux/actions/movie'; \r\nimport './MovieItem.css'\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nexport const MovieItem = ({\r\n  imgUrl, name, setMovie, id, overview, releaseDate,rating, genres,\r\n}) => {\r\n  const history = useHistory();\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setMovie({\r\n      id, imgUrl, name, overview, releaseDate,rating, genres,\r\n    });\r\n    history.push(`/details/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row__post__container\">\r\n          <img  className=\"row__poster\" src={imgUrl} alt=\"Movie Poster\" onClick={handleClick} />\r\n          <p className=\"movie__item-rating\">\r\n          <StarIcon style={{\"font-size\": \"17px\" , \"color\": \"orange\"}}/>\r\n          {rating}\r\n          </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieItem.defaultProps = {\r\n  imgUrl: '',\r\n};\r\n\r\nMovieItem.propTypes = {\r\n  imgUrl: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  setMovie: PropTypes.func.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  releaseDate: PropTypes.string.isRequired,\r\n  rating:PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMovie: obj => dispatch(setMovie(obj)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(MovieItem);\r\n","import { SET_MOVIE } from '../constants/itemConstant';\r\n\r\nexport default movie => ({\r\n  type: SET_MOVIE,\r\n  payload: movie,\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","const {REACT_APP_API_KEY} = process.env;\r\nexport const baseUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst requests = {\r\n    fetchTrending : `/trending/all/week?api_key=${REACT_APP_API_KEY}&language=hi-IN`,\r\n    fetchNetflixOriginals : `/discover/tv?api_key=${REACT_APP_API_KEY}&with_networks=213`,\r\n    fetchTopRated : `/movie/top_rated?api_key=${REACT_APP_API_KEY}&language=hi-IN`,\r\n    fetchMoviePopular: `/movie/popular?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`,\r\n    fetchActionMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=28`,\r\n    fetchComedyMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=10749`,\r\n    fetchDocumentries : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=99`,\r\n    fetchPopularTVShows : `/tv/popular?api_key=${REACT_APP_API_KEY}&&language=en-US`,\r\n    fetchIndianMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&region=IN`,\r\n    fetchUpcomingMovies: `/movie/upcoming?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`,\r\n    fetchTopRatedTv: `/tv/top_rated?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`,\r\n    fetchGenresUrl: `/genre/movie/list?api_key=${REACT_APP_API_KEY}&language=en-US`,\r\n}\r\n\r\nexport default requests;","import { FILTER_BOOK } from '../constants/itemConstant';\r\n\r\nconst param = () => ({\r\n  type: FILTER_BOOK,\r\n  payload: param,\r\n});\r\n\r\nexport default param","\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport MovieItem from './subcomponent/MovieItem';\r\nimport axios from '../axios';\r\nimport { baseUrl } from '../request';\r\nimport filterAction from '../redux/actions/filter';\r\nimport './Row.css';\r\n\r\nfunction Row({\r\n  title, moviesUrl,filterParam , moviesFilter, id, allGenres,\r\n}) {\r\n  const [movies, setMovies] = useState(null);\r\n  const [genres, setGenres] = useState([]);\r\n  useEffect(async () => {\r\n    const fetchMovies = async () => {\r\n      const { data: { results } } = await axios.get(moviesUrl);\r\n\r\n      return results.map(({\r\n        id, poster_path, genre_ids, title, name, overview, first_air_date, release_date,vote_average,\r\n      }) => ({\r\n        id,\r\n        imageUrl: baseUrl + poster_path,\r\n        genreIds: genre_ids,\r\n        name: title || name,\r\n        overview,\r\n        releaseDate: first_air_date || release_date,\r\n        rating: vote_average,\r\n      }));\r\n    };\r\n\r\n    try {\r\n      const data = await fetchMovies();\r\n      setMovies(data);\r\n      const flattedGenresArr = data.map(({ genreIds }) => (genreIds)).flat();\r\n      const uniqGenres = new Set(flattedGenresArr);\r\n      setGenres([...uniqGenres]);\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  const setMoviesToDisplay = () => {\r\n    return movies;\r\n  };\r\n\r\n  const allMovies = filterParam.toString() === '0' ? movies : setMoviesToDisplay();\r\n  return (\r\n    <div className=\"row\">\r\n      <section id={id}>\r\n            <h2>{title}</h2>\r\n        <div className=\"row__posters\">\r\n          {allMovies?.map(({\r\n            id, imageUrl, name, overview, releaseDate, genreIds,rating\r\n          }) => (\r\n            <div key={id}>\r\n              <MovieItem\r\n                id={id}\r\n                name={name}\r\n                imgUrl={imageUrl}\r\n                desc={overview}\r\n                releaseDate={releaseDate}\r\n                genres={genreIds}\r\n                overview={overview}\r\n                rating={rating}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  moviesUrl: PropTypes.string.isRequired,\r\n  filterParam: PropTypes.number.isRequired,\r\n  moviesFilter: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  rating:PropTypes.number,\r\n  allGenres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterParam: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  moviesFilter: param => dispatch(filterAction(param)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Row);\r\n","import { GET_GENRES } from '../constants/itemConstant';\r\n\r\nexport default genres => ({\r\n  type: GET_GENRES,\r\n  payload: genres,\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst Home = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"popularMovies\" title=\"POPULAR MOVIES\" moviesUrl={requests.fetchMoviePopular} />\r\n      <Row allGenres={genres} id=\"trendingMovies\" title=\"TRENDING MOVIES\" moviesUrl={requests.fetchTrending} />\r\n      <Row allGenres={genres} id=\"topRatedTv\" title=\"TOP RATED SHOWS\" moviesUrl={requests.fetchTopRatedTv} />\r\n      <Row allGenres={genres} id=\"documentries\" title=\"Documentries\" moviesUrl={requests.fetchDocumentries} />\r\n      <Row allGenres={genres} id=\"topRatedMovies\" title=\"TOP RATED MOVIES\" moviesUrl={requests.fetchTopRated} />\r\n    </div>\r\n  );\r\n}; \r\n\r\nHome.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './ItemDetails.css';\r\nimport axios from '../axios';\r\nimport { baseUrl } from '../request';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport const ItemDetails = ({ movie, allGenres }) => {\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  const history = useHistory();\r\n  if (!movie || !Object.keys(movie).length) {\r\n    history.push('/');\r\n  }\r\n  const {\r\n    id, name, imgUrl, overview, releaseDate, rating, genres,\r\n  } = movie;\r\n\r\n  const genresArr = genres?.map(id => (\r\n    allGenres?.find(gen => gen.id === id)\r\n  )).filter(item => item);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(`/movie/${movie.id}/credits?api_key=${process.env.REACT_APP_API_KEY}`);\r\n      const castItems = response.data.cast;\r\n      setCast(castItems.slice(0, 5));\r\n      return response;\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"item-page\">\r\n\r\n      <div className=\"item__container\">\r\n        <div className=\"item__outer\">\r\n          <div className=\"item__inner\">\r\n            <div className=\"item__img-box\">\r\n              <img src={imgUrl} alt=\"poster\" className=\"item__poster-img\" />\r\n            </div>\r\n            <div className=\"item__text-box\">\r\n              <h1 className=\"item__title\">{name}</h1>\r\n              <p className=\"item__overview\">{overview}</p>\r\n              <div className=\"item__info\">\r\n                <span className=\"item__release-date\"><h3>Release Date:</h3>{releaseDate}</span>\r\n              <div className=\"item__rating-content\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/3/35/IMDb_logo.svg\" alt=\"imdb\" className=\"item__imdb-img\" />\r\n                <span className=\"item__rating\">{rating}</span>\r\n                <StarIcon style={{\"font-size\": \"18px\" , \"color\": \"yellow\"}} />\r\n              </div>\r\n              </div>\r\n              <h2 className=\"item__cast-title\">Popular Cast</h2>\r\n              <div className=\"cast__container\">\r\n                {\r\n                  cast.map(cast => {\r\n                    return (<div\r\n                      key={cast.id}\r\n                      className=\"cast__item\"\r\n                    >\r\n                      <img className=\"cast__image\" src={baseUrl+cast.profile_path} alt={cast.name} />\r\n                        <p className=\"cast__name\">\r\n                        {cast.name}</p>\r\n                    </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n              <div className=\"gernes\"><h3>Gernres:</h3>\r\n                {genresArr?.map(({ name, id }) => <span key={id} className=\"item__gernes\">{name}</span>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nItemDetails.propTypes = {\r\n  movie: PropTypes.shape({\r\n    imgUrl: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    releaseDate: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  }).isRequired,\r\n  allGenres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ movie, genres }) => ({\r\n  movie,\r\n  allGenres: genres,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ItemDetails);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst TVShows = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"popularTv\" title=\"POPULAR TV SHOWS\" moviesUrl={requests.fetchPopularTVShows} />\r\n      <Row allGenres={genres} id=\"netflixOriginals\" title=\"NETFLIX ORIGINALS\" moviesUrl={requests.fetchNetflixOriginals} />\r\n      <Row allGenres={genres} id=\"topRated\" title=\"TOP RATED SHOWS\" moviesUrl={requests.fetchTopRatedTv} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTVShows.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TVShows);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst NewAndPopular = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"upcomingMovies\" title=\"UPCOMING MOVIES\" moviesUrl={requests.fetchUpcomingMovies} />\r\n      <Row allGenres={genres} id=\"PopularMovies\" title=\"POPULAR MOVIES\" moviesUrl={requests.fetchMoviePopular} />\r\n      <Row allGenres={genres} id=\"popularTv\" title=\"POPULAR TV SHOWS\" moviesUrl={requests.fetchPopularTVShows} />\r\n    </div>\r\n  );\r\n};\r\n\r\nNewAndPopular.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewAndPopular);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst Home = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"comedyMovies\" title=\"COMEDY MOVIES\" moviesUrl={requests.fetchComedyMovies} />\r\n      <Row allGenres={genres} id=\"horrorMovies\" title=\"HORROR MOVIES\" moviesUrl={requests.fetchHorrorMovies} />\r\n      <Row allGenres={genres} id=\"romanticMovies\" title=\"ROMANTIC MOVIES\" moviesUrl={requests.fetchRomanceMovies} />\r\n      <Row allGenres={genres} id=\"actionMovies\" title=\"ACTION MOVIES\" moviesUrl={requests.fetchActionMovies} />\r\n      <Row allGenres={genres} id=\"thrillerMovies\" title=\"THRILLER MOVIES\" moviesUrl={requests.fetchIndianMovies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from  './components/Navbar';\r\nimport Home from  './pages/Home';\r\nimport ItemDetails from  './pages/ItemDetails';\r\nimport './App.css';\r\nimport TVShows from './pages/TVShows';\r\nimport NewAndPopular from './pages/NewAndPopular';\r\nimport Movies from './pages/Movies';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"app\">\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/tv-shows\" component={TVShows} />\r\n        <Route exact path=\"/movies\" component={Movies} />\r\n        <Route exact path=\"/new-and-popular\" component={NewAndPopular} />\r\n        <Route exact path=\"/details/:id\" component={ItemDetails} />\r\n      </Switch>\r\n    \r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport movie from './movie';\r\nimport genres from './genre';\r\nimport filter from './filter';\r\n\r\nexport default combineReducers({\r\n  filter,\r\n  genres,\r\n  movie,\r\n});\r\n","import { FILTER_BOOK } from '../constants/itemConstant';\r\n\r\nexport default (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case FILTER_BOOK:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_GENRES } from '../constants/itemConstant';\r\n\r\nexport default (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case GET_GENRES:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_MOVIE } from '../constants/itemConstant';\r\n\r\nexport default (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_MOVIE:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.devToolsExtension() : f => f,\r\n  ),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
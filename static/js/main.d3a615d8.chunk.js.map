{"version":3,"sources":["components/Navbar.js","redux/constants/itemConstant.js","components/subcomponent/MovieItem.js","redux/actions/movie.js","axios.js","request.js","components/Row.js","redux/actions/genres.js","pages/Home.js","pages/ItemDetails.js","pages/TVShows.js","pages/NewAndPopular.js","pages/Movies.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/genre.js","redux/reducers/movie.js","store.js","index.js"],"names":["Navbar","className","to","src","alt","SET_MOVIE","GET_GENRES","connect","dispatch","setMovie","obj","type","payload","imgUrl","name","id","overview","releaseDate","rating","genres","history","useHistory","onClick","e","preventDefault","push","style","instance","axios","create","baseURL","REACT_APP_API_KEY","process","baseUrl","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchMoviePopular","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","fetchPopularTVShows","fetchIndianMovies","fetchUpcomingMovies","fetchTopRatedTv","fetchGenresUrl","Row","title","moviesUrl","allGenres","useState","movies","setMovies","setGenres","useEffect","a","fetchMovies","get","results","data","map","poster_path","genre_ids","first_air_date","release_date","vote_average","imageUrl","genreIds","flattedGenresArr","flat","uniqGenres","Set","desc","fetchGenres","res","movie","cast","setCast","Object","keys","length","goBack","genresArr","find","gen","filter","item","response","castItems","slice","fetchData","profile_path","App","exact","path","component","Home","TVShows","Movies","NewAndPopular","ItemDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","state","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3a615d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './Navbar.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n        <div className=\"navbar\">\r\n        <div className=\"navbar__right\">\r\n            <NavLink to=\"/netflix-movies\">\r\n             <img className=\"navbar__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix logo\" />\r\n            </NavLink>\r\n        \r\n            <NavLink to=\"/netflix-movies\" className=\"nav__links\">\r\n                Home\r\n            </NavLink>\r\n            <NavLink to=\"/tv-shows\" className=\"nav__links\">\r\n                TVShows\r\n            </NavLink>\r\n            <NavLink to=\"/movies\" className=\"nav__links\">\r\n                Movies\r\n            </NavLink>\r\n            <NavLink to=\"/new-and-popular\" className=\"nav__links\">\r\n                New & Popular\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className=\"navbar__left\">\r\n            <div className=\"left__icon\">\r\n            <SearchIcon />\r\n            </div>\r\n             <div className=\"left__icon\">\r\n                <CardGiftcardIcon />\r\n             </div>\r\n            <div className=\"left__icon\">\r\n                <NotificationsIcon />\r\n            </div>\r\n            <div className=\"left__icon\">\r\n                <AccountCircleIcon />\r\n            </div>\r\n        </div>\r\n        </div>\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const SET_MOVIE = 'SET_MOVIE';\r\nexport const GET_GENRES = 'GET_GENRE';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport setMovie from '../../redux/actions/movie'; \r\nimport './MovieItem.css'\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nexport const MovieItem = ({\r\n  imgUrl, name, setMovie, id, overview, releaseDate,rating, genres,\r\n}) => {\r\n  const history = useHistory();\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setMovie({\r\n      id, imgUrl, name, overview, releaseDate,rating, genres,\r\n    });\r\n    history.push(`/details/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row__post__container\">\r\n          <img  className=\"row__poster\" src={imgUrl} alt=\"Movie Poster\" onClick={handleClick} />\r\n          <p className=\"movie__item-rating\">\r\n          <StarIcon style={{\"fontSize\": \"17px\" , \"color\": \"orange\"}}/>\r\n          {rating}\r\n          </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nMovieItem.propTypes = {\r\n  imgUrl: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  setMovie: PropTypes.func.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  releaseDate: PropTypes.string.isRequired,\r\n  rating:PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMovie: obj => dispatch(setMovie(obj)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(MovieItem);\r\n","import { SET_MOVIE } from '../constants/itemConstant';\r\n\r\nexport default movie => ({\r\n  type: SET_MOVIE,\r\n  payload: movie,\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","const {REACT_APP_API_KEY} = process.env;\r\nexport const baseUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst requests = {\r\n    fetchTrending : `/trending/all/week?api_key=${REACT_APP_API_KEY}&language=hi-IN`,\r\n    fetchNetflixOriginals : `/discover/tv?api_key=${REACT_APP_API_KEY}&with_networks=213`,\r\n    fetchTopRated : `/movie/top_rated?api_key=${REACT_APP_API_KEY}&language=hi-IN`,\r\n    fetchMoviePopular: `/movie/popular?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`,\r\n    fetchActionMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=28`,\r\n    fetchComedyMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=10749`,\r\n    fetchDocumentries : `/discover/movie?api_key=${REACT_APP_API_KEY}&with_genres=99`,\r\n    fetchPopularTVShows : `/tv/popular?api_key=${REACT_APP_API_KEY}&&language=en-US`,\r\n    fetchIndianMovies : `/discover/movie?api_key=${REACT_APP_API_KEY}&region=IN`,\r\n    fetchUpcomingMovies: `/movie/upcoming?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`,\r\n    fetchTopRatedTv: `/tv/top_rated?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`,\r\n    fetchGenresUrl: `/genre/movie/list?api_key=${REACT_APP_API_KEY}&language=en-US`,\r\n}\r\n\r\nexport default requests;","import React, { useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MovieItem from './subcomponent/MovieItem';\r\nimport axios from '../axios';\r\nimport { baseUrl } from '../request';\r\nimport './Row.css';\r\n\r\nfunction Row({\r\n  title, moviesUrl, id, allGenres,\r\n}) {\r\n  const [movies, setMovies] = useState(null);\r\n  const [genres, setGenres] = useState([]);\r\n  useEffect(async () => {\r\n    const fetchMovies = async () => {\r\n      const { data: { results } } = await axios.get(moviesUrl);\r\n\r\n      return results.map(({\r\n        id, poster_path, genre_ids, title, name, overview, first_air_date, release_date,vote_average,\r\n      }) => ({\r\n        id,\r\n        imageUrl: baseUrl + poster_path,\r\n        genreIds: genre_ids,\r\n        name: title || name,\r\n        overview,\r\n        releaseDate: first_air_date || release_date,\r\n        rating: vote_average,\r\n      }));\r\n    };\r\n\r\n    try {\r\n      const data = await fetchMovies();\r\n      setMovies(data);\r\n      const flattedGenresArr = data.map(({ genreIds }) => (genreIds)).flat();\r\n      const uniqGenres = new Set(flattedGenresArr);\r\n      setGenres([...uniqGenres]);\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <section id={id}>\r\n            <h2>{title}</h2>\r\n        <div className=\"row__posters\">\r\n          {movies?.map(({\r\n            id, imageUrl, name, overview, releaseDate, genreIds,rating\r\n          }) => (\r\n            <div key={id}>\r\n              <MovieItem\r\n                id={id}\r\n                name={name}\r\n                imgUrl={imageUrl}\r\n                desc={overview}\r\n                releaseDate={releaseDate}\r\n                genres={genreIds}\r\n                overview={overview}\r\n                rating={rating}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  moviesUrl: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  rating:PropTypes.number,\r\n  allGenres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Row;\r\n","import { GET_GENRES } from '../constants/itemConstant';\r\n\r\nexport default genres => ({\r\n  type: GET_GENRES,\r\n  payload: genres,\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst Home = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"popularMovies\" title=\"POPULAR MOVIES\" moviesUrl={requests.fetchMoviePopular} />\r\n      <Row allGenres={genres} id=\"topRatedMovies\" title=\"TOP RATED MOVIES\" moviesUrl={requests.fetchTopRated} />\r\n      <Row allGenres={genres} id=\"topRatedTv\" title=\"TOP RATED SHOWS\" moviesUrl={requests.fetchTopRatedTv} />\r\n      <Row allGenres={genres} id=\"documentries\" title=\"Documentries\" moviesUrl={requests.fetchDocumentries} />\r\n      <Row allGenres={genres} id=\"trendingMovies\" title=\"TRENDING MOVIES\" moviesUrl={requests.fetchTrending} />\r\n    </div>\r\n  );\r\n}; \r\n\r\nHome.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './ItemDetails.css';\r\nimport axios from '../axios';\r\nimport { baseUrl } from '../request';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport const ItemDetails = ({ movie, allGenres }) => {\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  const history = useHistory();\r\n  if (!movie || !Object.keys(movie).length) {\r\n    history.goBack();\r\n  }\r\n  const {\r\n    id, name, imgUrl, overview, releaseDate, rating, genres,\r\n  } = movie;\r\n\r\n  const genresArr = genres?.map(id => (\r\n    allGenres?.find(gen => gen.id === id)\r\n  )).filter(item => item);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(`/movie/${movie.id}/credits?api_key=${process.env.REACT_APP_API_KEY}`);\r\n      const castItems = response.data.cast;\r\n      setCast(castItems.slice(0, 5));\r\n      return response;\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"item-page\">\r\n\r\n      <div className=\"item__container\">\r\n        <div className=\"item__outer\">\r\n          <div className=\"item__inner\">\r\n            <div className=\"item__img-box\">\r\n              <img src={imgUrl} alt=\"poster\" className=\"item__poster-img\" />\r\n            </div>\r\n            <div className=\"item__text-box\">\r\n              <h1 className=\"item__title\">{name}</h1>\r\n              <p className=\"item__overview\">{overview}</p>\r\n              <div className=\"item__info\">\r\n                <span className=\"item__release-date\"><h3>Release Date:</h3>{releaseDate}</span>\r\n              <div className=\"item__rating-content\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/3/35/IMDb_logo.svg\" alt=\"imdb\" className=\"item__imdb-img\" />\r\n                <span className=\"item__rating\">{rating}</span>\r\n                <StarIcon style={{\"font-size\": \"18px\" , \"color\": \"yellow\"}} />\r\n              </div>\r\n              </div>\r\n              <h2 className=\"item__cast-title\">Popular Cast</h2>\r\n              <div className=\"cast__container\">\r\n                {\r\n                  cast.map(cast => {\r\n                    return (<div\r\n                      key={cast.id}\r\n                      className=\"cast__item\"\r\n                    >\r\n                      <img className=\"cast__image\" src={baseUrl+cast.profile_path} alt={cast.name} />\r\n                        <p className=\"cast__name\">\r\n                        {cast.name}</p>\r\n                    </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n              <div className=\"gernes\"><h3>Gernres:</h3>\r\n                {genresArr?.map(({ name, id }) => <span key={id} className=\"item__gernes\">{name}</span>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nItemDetails.propTypes = {\r\n  movie: PropTypes.shape({\r\n    imgUrl: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    releaseDate: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  }).isRequired,\r\n  allGenres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ movie, genres }) => ({\r\n  movie,\r\n  allGenres: genres,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ItemDetails);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst TVShows = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"popularTv\" title=\"POPULAR TV SHOWS\" moviesUrl={requests.fetchPopularTVShows} />\r\n      <Row allGenres={genres} id=\"netflixOriginals\" title=\"NETFLIX ORIGINALS\" moviesUrl={requests.fetchNetflixOriginals} />\r\n      <Row allGenres={genres} id=\"topRated\" title=\"TOP RATED SHOWS\" moviesUrl={requests.fetchTopRatedTv} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTVShows.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TVShows);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst NewAndPopular = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"upcomingMovies\" title=\"UPCOMING MOVIES\" moviesUrl={requests.fetchUpcomingMovies} />\r\n      <Row allGenres={genres} id=\"PopularMovies\" title=\"POPULAR MOVIES\" moviesUrl={requests.fetchMoviePopular} />\r\n      <Row allGenres={genres} id=\"popularTv\" title=\"POPULAR TV SHOWS\" moviesUrl={requests.fetchPopularTVShows} />\r\n    </div>\r\n  );\r\n};\r\n\r\nNewAndPopular.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewAndPopular);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Row from '../components/Row';\r\nimport requests from '../request';\r\nimport axios from '../axios';  \r\nimport setGenres from '../redux/actions/genres';\r\n\r\nconst Home = ({ genres, setGenres }) => {\r\n  useEffect(async () => {\r\n    const fetchGenres = async () => {\r\n      const { data: genres } = await axios.get(requests.fetchGenresUrl);\r\n      return genres.genres;\r\n    };\r\n    const res = await fetchGenres();\r\n    setGenres(res);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Row allGenres={genres} id=\"comedyMovies\" title=\"COMEDY MOVIES\" moviesUrl={requests.fetchComedyMovies} />\r\n      <Row allGenres={genres} id=\"horrorMovies\" title=\"HORROR MOVIES\" moviesUrl={requests.fetchHorrorMovies} />\r\n      <Row allGenres={genres} id=\"romanticMovies\" title=\"ROMANTIC MOVIES\" moviesUrl={requests.fetchRomanceMovies} />\r\n      <Row allGenres={genres} id=\"actionMovies\" title=\"ACTION MOVIES\" moviesUrl={requests.fetchActionMovies} />\r\n      <Row allGenres={genres} id=\"thrillerMovies\" title=\"THRILLER MOVIES\" moviesUrl={requests.fetchIndianMovies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  genres: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  setGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ genres }) => ({\r\n  genres,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGenres: genres => dispatch(setGenres(genres)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from  './components/Navbar';\r\nimport Home from  './pages/Home';\r\nimport ItemDetails from  './pages/ItemDetails';\r\nimport './App.css';\r\nimport TVShows from './pages/TVShows';\r\nimport NewAndPopular from './pages/NewAndPopular';\r\nimport Movies from './pages/Movies';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"app\">\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path=\"/netflix-movies\" component={Home} />\r\n        <Route exact path=\"/tv-shows\" component={TVShows} />\r\n        <Route exact path=\"/movies\" component={Movies} />\r\n        <Route exact path=\"/new-and-popular\" component={NewAndPopular} />\r\n        <Route exact path=\"/details/:id\" component={ItemDetails} />\r\n      </Switch>\r\n    \r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport movie from './movie';\r\nimport genres from './genre';\r\n\r\nexport default combineReducers({\r\n  genres,\r\n  movie,\r\n});\r\n","import { GET_GENRES } from '../constants/itemConstant';\r\n\r\nexport default (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case GET_GENRES:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_MOVIE } from '../constants/itemConstant';\r\n\r\nexport default (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_MOVIE:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore} from 'redux';\r\nimport rootReducer from './redux/reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}